{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","eError","type","id","email","eBlur","pError","password","pBlur","onSubmit","disabled","isSubmitting","isTooManyAttemps","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handleBlur","min","values","dispatch","push","computed","watch","val","setTimeout","setup","route","query","message","error","render"],"mappings":"2IAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAsC,SAA/BA,IAAI,YAAW,YAAQ,G,mBAQ3BC,MAAM,e,gDAlBb,eAqBO,QArBDA,MAAM,OAAQ,SAAM,4BAAP,cAAe,e,CAChC,EAEA,eAIM,OAJAA,MAAK,yBAA8B,EAAAC,U,CACvC,E,eACA,eAA+D,SAAxDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAIM,OAJAD,MAAK,yBAA8B,EAAAM,U,CACvC,E,eACA,eAAwE,SAAjEJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAES,UAFDN,MAAM,cAAe,QAAK,8BAAE,EAAAS,UAAA,EAAAA,SAAA,qBAAWC,SAAU,EAAAC,cAAgB,EAAAC,kBAAkB,UAE3F,gBAC+B,EAAAA,kB,iBAA/B,eAEM,MAFN,EAAiD,mE,mJCbtC,SAASC,IACtB,IAAMC,EAAQC,iBACRC,EAASC,iBAFsB,EAGeC,iBAA5CC,EAH6B,EAG7BA,aAAcR,EAHe,EAGfA,aAAcS,EAHC,EAGDA,YAHC,EAI6BC,eAChE,QACAC,SAEGC,OACAC,SAAS,2BACTpB,MAAM,uCANIA,EAJsB,EAI7BqB,MAA4BxB,EAJC,EAIfyB,aAAkCrB,EAJnB,EAIOsB,WAJP,EAYgCN,eACnE,WACAC,SAEGC,OACAC,SAAS,8BACTI,IAAI,EAAG,2CANGrB,EAZsB,EAY7BkB,MAA+BnB,EAZF,EAYZoB,aAAkClB,EAZtB,EAYUmB,WASzClB,EAAWU,EAAY,yDAAC,WAAMU,GAAN,0GAEpBf,EAAMgB,SAAS,aAAcD,GAFT,OAG1Bb,EAAOe,KAAK,KAHc,0GAAD,uDAOvBnB,EAAmBoB,gBAAS,kBAAMZ,EAAYK,OAAS,KAU7D,OARAQ,eAAMrB,GAAkB,SAAAsB,GAClBA,GACFC,YAAW,WACTf,EAAYK,MAAQ,IACnB,QAIA,CACLrB,QACAH,SACAI,QACAE,WACAD,SACAE,QACAC,WACAE,eACAC,oBDtBW,OACbwB,MADa,WAEX,IAAMC,EAAQ,iBACRvB,EAAQ,iBAQd,OANIuB,EAAMC,MAAMC,SACdzB,EAAMgB,SAAS,aAAc,CAC3BL,MAAO,OAAAe,EAAA,MAAMH,EAAMC,MAAMC,SACzBrC,KAAM,YAGV,kBACKW,OExCT,EAAO4B,OAASA,EAED","file":"js/chunk-2d0be70b.328b3a2c.js","sourcesContent":["<template>\n  <form class=\"card\" @submit.prevent>\n    <h1>Войти в систему</h1>\n\n    <div :class=\"['form-control', { invalid: eError }]\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\" />\n      <small v-if=\"eError\">{{ eError }}</small>\n    </div>\n\n    <div :class=\"['form-control', { invalid: pError }]\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\" />\n      <small v-if=\"pError\">{{ pError }}</small>\n    </div>\n\n    <button class=\"btn primary\" @click=\"onSubmit\" :disabled=\"isSubmitting || isTooManyAttemps\">\n      Войти\n    </button>\n    <div class=\"text-danger\" v-if=\"isTooManyAttemps\">\n      Вы слишком часто пытаетесь войти в систему. Попробуйте позже\n    </div>\n  </form>\n</template>\n\n<script>\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { error } from '../utils/error';\nimport useLoginForm from '../use/login-form';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const store = useStore();\n\n    if (route.query.message) {\n      store.dispatch('setMessage', {\n        value: error(route.query.message),\n        type: 'warning',\n      });\n    }\n    return {\n      ...useLoginForm(),\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n","import { computed, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { useField, useForm } from 'vee-validate';\nimport * as yup from 'yup';\n\nexport default function useLoginForm() {\n  const store = useStore();\n  const router = useRouter();\n  const { handleSubmit, isSubmitting, submitCount } = useForm();\n  const { value: email, errorMessage: eError, handleBlur: eBlur } = useField(\n    'email',\n    yup\n      .string()\n      .trim()\n      .required('Поле Email обязательное')\n      .email('Необходимо ввести корректный Email')\n  );\n  const { value: password, errorMessage: pError, handleBlur: pBlur } = useField(\n    'password',\n    yup\n      .string()\n      .trim()\n      .required('Поле Password обязательное')\n      .min(6, 'Пароль не может быть меньше 6 символов')\n  );\n\n  const onSubmit = handleSubmit(async values => {\n    try {\n      await store.dispatch('auth/login', values);\n      router.push('/');\n    } catch (e) {}\n  });\n\n  const isTooManyAttemps = computed(() => submitCount.value >= 3);\n\n  watch(isTooManyAttemps, val => {\n    if (val) {\n      setTimeout(() => {\n        submitCount.value = 0;\n      }, 2000);\n    }\n  });\n\n  return {\n    email,\n    eError,\n    eBlur,\n    password,\n    pError,\n    pBlur,\n    onSubmit,\n    isSubmitting,\n    isTooManyAttemps,\n  };\n}\n","import { render } from \"./Auth.vue?vue&type=template&id=255a8db8\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}